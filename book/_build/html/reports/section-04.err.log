Traceback (most recent call last):
  File "/Users/robertwexler/miniconda3/envs/chem-402-5020/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/robertwexler/miniconda3/envs/chem-402-5020/lib/python3.10/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/robertwexler/miniconda3/envs/chem-402-5020/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/robertwexler/miniconda3/envs/chem-402-5020/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/Users/robertwexler/miniconda3/envs/chem-402-5020/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/robertwexler/miniconda3/envs/chem-402-5020/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/robertwexler/miniconda3/envs/chem-402-5020/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from myst_nb import glue

# Set plot style
plt.style.use('seaborn-v0_8-colorblind')

# Increase font size for better readability
plt.rcParams.update({'font.size': 18})

# Gas constant in LÂ·bar/(KÂ·mol)
R = 0.08314  

# Van der Waals parameters for Helium
a_He = 0.0346   # LÂ²Â·bar/molÂ²
b_He = 0.0238   # L/mol

def van_der_waals_pressure(a, b, T, V):
    """
    Calculate the van der Waals pressure for given parameters.

    Parameters
    ----------
    a : float
        Attraction parameter (LÂ²Â·bar/molÂ²).
    b : float
        Excluded volume parameter (L/mol).
    T : float
        Temperature (K).
    V : ndarray
        Molar volume array (L/mol).

    Returns
    -------
    ndarray
        Pressure in bar for each volume.
    """
    return R * T / (V - b) - a / V**2

def plot_vdw_isotherms(ax, a, b, Tc, Pc, Vc):
    """
    Plot van der Waals isotherms for temperatures ranging from 0.8 T_c to 1.2 T_c.

    Parameters
    ----------
    ax : matplotlib.axes.Axes
        The axes on which to plot.
    a, b : float
        van der Waals parameters.
    Tc, Pc, Vc : float
        Critical temperature, pressure, and molar volume.
    """
    # Reduced temperature range
    Tr = np.linspace(0.8, 1.2, 3)
    # Reduced volume range
    Vr = np.linspace(0.4, 8, 1000)

    # Actual T and V arrays
    T_vals = Tc * Tr
    V_vals = Vc * Vr

    # Plot each isotherm
    for i, T_i in enumerate(T_vals):
        P_vals = van_der_waals_pressure(a, b, T_i, V_vals)
        ax.plot(V_vals, P_vals, label=rf"vdW: $T = {Tr[i]:.1f}\,T_c$")

    ax.set_ylim(-0.4 * Pc, 2.6 * Pc)
    ax.set_xlabel(r"$V_m$ (L/mol)")
    ax.set_ylabel(r"$P$ (bar)")
    ax.legend()

# Create a figure
fig, axs = plt.subplot_mosaic([[0]], figsize=(12, 6))

# Load experimental data for Helium
df_He = pd.read_excel("_static/lecture-04/He_data.xlsx")

# Plot experimental data at ~0.8 T_c
axs[0].plot(df_He["Volume (l/mol)"], df_He["Pressure (bar)"], 
            label="Experiment, $T \\approx 0.8\,T_c$", color="black")

# Compute critical constants for Helium
Tc_He = 8 * a_He / (27 * R * b_He)
Pc_He = a_He / (27 * b_He**2)
Vc_He = 3 * b_He

# Plot theoretical van der Waals isotherms
plot_vdw_isotherms(axs[0], a_He, b_He, Tc_He, Pc_He, Vc_He)

# Save figure for later embedding with myst_nb's glue
glue("vdw_isotherms", fig, display=False)

# Close figure to prevent duplicate display
plt.close(fig)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [0;32mIn[2], line 77[0m
[1;32m     74[0m fig, axs [38;5;241m=[39m plt[38;5;241m.[39msubplot_mosaic([[[38;5;241m0[39m]], figsize[38;5;241m=[39m([38;5;241m12[39m, [38;5;241m6[39m))
[1;32m     76[0m [38;5;66;03m# Load experimental data for Helium[39;00m
[0;32m---> 77[0m df_He [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mread_excel[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43m_static/lecture-04/He_data.xlsx[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m     79[0m [38;5;66;03m# Plot experimental data at ~0.8 T_c[39;00m
[1;32m     80[0m axs[[38;5;241m0[39m][38;5;241m.[39mplot(df_He[[38;5;124m"[39m[38;5;124mVolume (l/mol)[39m[38;5;124m"[39m], df_He[[38;5;124m"[39m[38;5;124mPressure (bar)[39m[38;5;124m"[39m], 
[1;32m     81[0m             label[38;5;241m=[39m[38;5;124m"[39m[38;5;124mExperiment, $T [39m[38;5;130;01m\\[39;00m[38;5;124mapprox 0.8[39m[38;5;124m\[39m[38;5;124m,T_c$[39m[38;5;124m"[39m, color[38;5;241m=[39m[38;5;124m"[39m[38;5;124mblack[39m[38;5;124m"[39m)

File [0;32m~/.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:478[0m, in [0;36mread_excel[0;34m(io, sheet_name, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, date_format, thousands, decimal, comment, skipfooter, storage_options, dtype_backend)[0m
[1;32m    476[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(io, ExcelFile):
[1;32m    477[0m     should_close [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[0;32m--> 478[0m     io [38;5;241m=[39m [43mExcelFile[49m[43m([49m[43mio[49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m[43m [49m[43mengine[49m[38;5;241;43m=[39;49m[43mengine[49m[43m)[49m
[1;32m    479[0m [38;5;28;01melif[39;00m engine [38;5;129;01mand[39;00m engine [38;5;241m!=[39m io[38;5;241m.[39mengine:
[1;32m    480[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    481[0m         [38;5;124m"[39m[38;5;124mEngine should not be specified when passing [39m[38;5;124m"[39m
[1;32m    482[0m         [38;5;124m"[39m[38;5;124man ExcelFile - ExcelFile already has the engine set[39m[38;5;124m"[39m
[1;32m    483[0m     )

File [0;32m~/.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:1496[0m, in [0;36mExcelFile.__init__[0;34m(self, path_or_buffer, engine, storage_options)[0m
[1;32m   1494[0m     ext [38;5;241m=[39m [38;5;124m"[39m[38;5;124mxls[39m[38;5;124m"[39m
[1;32m   1495[0m [38;5;28;01melse[39;00m:
[0;32m-> 1496[0m     ext [38;5;241m=[39m [43minspect_excel_format[49m[43m([49m
[1;32m   1497[0m [43m        [49m[43mcontent_or_path[49m[38;5;241;43m=[39;49m[43mpath_or_buffer[49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m
[1;32m   1498[0m [43m    [49m[43m)[49m
[1;32m   1499[0m     [38;5;28;01mif[39;00m ext [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1500[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m   1501[0m             [38;5;124m"[39m[38;5;124mExcel file format cannot be determined, you must specify [39m[38;5;124m"[39m
[1;32m   1502[0m             [38;5;124m"[39m[38;5;124man engine manually.[39m[38;5;124m"[39m
[1;32m   1503[0m         )

File [0;32m~/.local/lib/python3.10/site-packages/pandas/io/excel/_base.py:1371[0m, in [0;36minspect_excel_format[0;34m(content_or_path, storage_options)[0m
[1;32m   1368[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(content_or_path, [38;5;28mbytes[39m):
[1;32m   1369[0m     content_or_path [38;5;241m=[39m BytesIO(content_or_path)
[0;32m-> 1371[0m [38;5;28;01mwith[39;00m [43mget_handle[49m[43m([49m
[1;32m   1372[0m [43m    [49m[43mcontent_or_path[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mrb[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m[43m [49m[43mis_text[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m
[1;32m   1373[0m [43m[49m[43m)[49m [38;5;28;01mas[39;00m handle:
[1;32m   1374[0m     stream [38;5;241m=[39m handle[38;5;241m.[39mhandle
[1;32m   1375[0m     stream[38;5;241m.[39mseek([38;5;241m0[39m)

File [0;32m~/.local/lib/python3.10/site-packages/pandas/io/common.py:868[0m, in [0;36mget_handle[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[1;32m    859[0m         handle [38;5;241m=[39m [38;5;28mopen[39m(
[1;32m    860[0m             handle,
[1;32m    861[0m             ioargs[38;5;241m.[39mmode,
[0;32m   (...)[0m
[1;32m    864[0m             newline[38;5;241m=[39m[38;5;124m"[39m[38;5;124m"[39m,
[1;32m    865[0m         )
[1;32m    866[0m     [38;5;28;01melse[39;00m:
[1;32m    867[0m         [38;5;66;03m# Binary mode[39;00m
[0;32m--> 868[0m         handle [38;5;241m=[39m [38;5;28;43mopen[39;49m[43m([49m[43mhandle[49m[43m,[49m[43m [49m[43mioargs[49m[38;5;241;43m.[39;49m[43mmode[49m[43m)[49m
[1;32m    869[0m     handles[38;5;241m.[39mappend(handle)
[1;32m    871[0m [38;5;66;03m# Convert BytesIO or file objects passed with an encoding[39;00m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '_static/lecture-04/He_data.xlsx'

